openapi: 3.0.0
info:
  title: Learning App API
  description: An API for managing courses, teachers, students, and tests in a learning app.
  version: 1.0.0
servers:
  - url: https://api.learningapp.com/v1
tags:
  - name: Courses
    description: Operations related to courses.
  - name: Teachers
    description: Operations related to teachers.
  - name: Students
    description: Operations related to students.
  - name: Tests
    description: Operations related to tests.

paths:
  /courses:
    get:
      tags:
        - Courses
      summary: Get all courses
      responses:
        '200':
          description: A list of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      tags:
        - Courses
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{courseId}:
    parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Courses
      summary: Get a specific course by ID
      responses:
        '200':
          description: The requested course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '404':
          description: Course not found

    put:
      tags:
        - Courses
      summary: Update a specific course by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

    delete:
      tags:
        - Courses
      summary: Delete a specific course by ID
      responses:
        '204':
          description: Course deleted successfully

  /teachers:
    get:
      tags:
        - Teachers
      summary: Get all teachers
      responses:
        '200':
          description: A list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
    post:
      tags:
        - Teachers
      summary: Create a new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '201':
          description: Teacher created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'

  /teachers/{teacherId}:
    parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Teachers
      summary: Get a specific teacher by ID
      responses:
        '200':
          description: The requested teacher
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Teacher not found

    put:
      tags:
        - Teachers
      summary: Update a specific teacher by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '200':
          description: Teacher updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'

    delete:
      tags:
        - Teachers
      summary: Delete a specific teacher by ID
      responses:
        '204':
          description: Teacher deleted successfully

  /students:
    get:
      tags:
        - Students
      summary: Get all students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      tags:
        - Students
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /students/{studentId}:
    parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Students
      summary: Get a specific student by ID
      responses:
        '200':
          description: The requested student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found

    put:
      tags:
        - Students
      summary: Update a specific student by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

    delete:
      tags:
        - Students
      summary: Delete a specific student by ID
      responses:
        '204':
          description: Student deleted successfully

  /tests:
    get:
      tags:
        - Tests
      summary: Get all tests
      responses:
        '200':
          description: A list of tests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
    post:
      tags:
        - Tests
      summary: Create a new test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '201':
          description: Test created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

  /tests/{testId}:
    parameters:
      - name: testId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Tests
      summary: Get a specific test by ID
      responses:
        '200':
          description: The requested test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        '404':
          description: Test not found

    put:
      tags:
        - Tests
      summary: Update a specific test by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '200':
          description: Test updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'

    delete:
      tags:
        - Tests
      summary: Delete a specific test by ID
      responses:
        '204':
          description: Test deleted successfully

components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the course
        name:
          type: string
          description: Name of the course
        description:
          type: string
          description: Description of the course
        teacherId:
          type: integer
          description: ID of the teacher who teaches this course

    Teacher:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the teacher
        name:
          type: string
          description: Name of the teacher
        email:
          type: string
          format: email
          description: Email address of the teacher

    Student:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the student
        name:
          type: string
          description: Name of the student
        email:
          type: string
          format: email
          description: Email address of the student

    Test:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the test
        title:
          type: string
          description: Title of the test
        course_id:
          type: integer
          description: ID of the course this test belongs to
        questions:
          type: array
          items:
            type: string
            description: Questions in the test